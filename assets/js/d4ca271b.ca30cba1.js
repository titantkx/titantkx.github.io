"use strict";(self.webpackChunktitantkx_github_io=self.webpackChunktitantkx_github_io||[]).push([[907],{9533:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"upgrade/automatic-upgrades","title":"\ud83e\udd16 Automatic Upgrades","description":"Cosmovisor is a process manager for Cosmos SDK applications, providing a mechanism for automatic node upgrades. It monitors the governance process for signals indicating that a software upgrade is required and automatically downloads and applies the necessary updates. This tool helps to facilitate smoother and more efficient network upgrades, thereby ensuring a high level of continuity and reliability of blockchain services.","source":"@site/docs/upgrade/automatic-upgrades.md","sourceDirName":"upgrade","slug":"/upgrade/automatic-upgrades","permalink":"/docs/upgrade/automatic-upgrades","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udcd2 Upgrade list","permalink":"/docs/upgrade/upgrade-list"},"next":{"title":"\ud83d\udd10 Security and Operations","permalink":"/docs/security-and-operations"}}');var i=s(6070),t=s(5658);const r={sidebar_position:2},a="\ud83e\udd16 Automatic Upgrades",l={},d=[{value:"1. Install Titand",id:"1-install-titand",level:2},{value:"2. Install Cosmovisor",id:"2-install-cosmovisor",level:2},{value:"3. Init and config Node",id:"3-init-and-config-node",level:2},{value:"4. Config Cosmovisor",id:"4-config-cosmovisor",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-automatic-upgrades",children:"\ud83e\udd16 Automatic Upgrades"})}),"\n",(0,i.jsx)(n.p,{children:"Cosmovisor is a process manager for Cosmos SDK applications, providing a mechanism for automatic node upgrades. It monitors the governance process for signals indicating that a software upgrade is required and automatically downloads and applies the necessary updates. This tool helps to facilitate smoother and more efficient network upgrades, thereby ensuring a high level of continuity and reliability of blockchain services."}),"\n",(0,i.jsx)(n.h2,{id:"1-install-titand",children:"1. Install Titand"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.a,{href:"../getting-set-up/installation/",children:["Install ",(0,i.jsx)(n.code,{children:"titand"})]})}),"\n",(0,i.jsx)(n.h2,{id:"2-install-cosmovisor",children:"2. Install Cosmovisor"}),"\n",(0,i.jsxs)(n.p,{children:["To install Cosmovisor you also need to install Go (",(0,i.jsx)(n.a,{href:"/docs/getting-set-up/installation/from-source#install-go",children:"guide"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["Follow ",(0,i.jsx)(n.a,{href:"https://docs.cosmos.network/main/build/tooling/cosmovisor",children:"the document of cosmos"})," to install Cosmovisor"]}),"\n",(0,i.jsxs)(n.p,{children:["Ensure add go bin ",(0,i.jsx)(n.code,{children:"/usr/local/go/bin"})," and your ",(0,i.jsx)(n.code,{children:"GOPATH"})," to ",(0,i.jsx)(n.code,{children:"PATH"})," environment variable. You will also want to add below path into $HOME/.profile to persistent."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"# add go binary\nexport PATH=$PATH:/usr/local/go/bin\n# add go package binary\nexport PATH=$PATH:$(go env GOPATH)/bin\n"})}),"\n",(0,i.jsx)(n.h2,{id:"3-init-and-config-node",children:"3. Init and config Node"}),"\n",(0,i.jsxs)(n.p,{children:["Follow ",(0,i.jsx)(n.a,{href:"/docs/getting-set-up/joining-testnet",children:"Joining Testnet"})," until step ",(0,i.jsx)(n.a,{href:"/docs/getting-set-up/joining-testnet#create-service-file",children:"Create service file"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"4-config-cosmovisor",children:"4. Config Cosmovisor"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add environment variable to ",(0,i.jsx)(n.code,{children:"~/.profile"})]}),"\n",(0,i.jsxs)(n.p,{children:["Correct ",(0,i.jsx)(n.code,{children:"DAEMON_HOME"})," if you do not use default home location for node"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"# Setup Cosmovisor\nexport DAEMON_NAME=titand\nexport DAEMON_HOME=$HOME/.titand\nexport DAEMON_RESTART_AFTER_UPGRADE=true\nexport DAEMON_ALLOW_DOWNLOAD_BINARIES=true\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Reload your ",(0,i.jsx)(n.code,{children:".profile"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"source ~/.profile\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create folders for Cosmovisor"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"mkdir -p ~/.titand/cosmovisor\nmkdir -p ~/.titand/cosmovisor/genesis\nmkdir -p ~/.titand/cosmovisor/upgrades\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Init Cosmvisor with ",(0,i.jsx)(n.code,{children:"titand"})," binary"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If you install ",(0,i.jsx)(n.code,{children:"titand"})," from source. Run follow command to init your genesis binary"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"cosmovisor init $(which titand)\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If you download prebuild binary ",(0,i.jsx)(n.code,{children:"titand"})," from our github. Copy prebuild binary and lib into cosmovior"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"cp -r ~/titan/* ~/.titand/cosmovisor/genesis/\ncosmovisor init ~/.titand/cosmovisor/genesis/bin/titand\n"})}),"\n",(0,i.jsxs)(n.p,{children:["After that your ",(0,i.jsx)(n.code,{children:".titand"})," folder will be like this (will not contain ",(0,i.jsx)(n.code,{children:"lib"})," folder if you install from source)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:".\n\u251c\u2500\u2500 config\n\u2502\xa0\xa0 \u251c\u2500\u2500 addrbook.json\n\u2502\xa0\xa0 \u251c\u2500\u2500 app.toml\n\u2502\xa0\xa0 \u251c\u2500\u2500 client.toml\n\u2502\xa0\xa0 \u251c\u2500\u2500 config.toml\n\u2502\xa0\xa0 \u251c\u2500\u2500 genesis.json\n\u2502\xa0\xa0 \u251c\u2500\u2500 node_key.json\n\u2502\xa0\xa0 \u2514\u2500\u2500 priv_validator_key.json\n\u251c\u2500\u2500 cosmovisor\n\u2502\xa0\xa0 \u251c\u2500\u2500 current -> /Users/mac/.titand/cosmovisor/genesis\n\u2502\xa0\xa0 \u2514\u2500\u2500 genesis\n\u2502       \u251c\u2500\u2500 LICENSE.md\n\u2502       \u251c\u2500\u2500 README.md\n\u2502       \u251c\u2500\u2500 bin\n\u2502       \u2502\xa0\xa0 \u2514\u2500\u2500 titand\n\u2502       \u2514\u2500\u2500 lib\n\u2502           \u251c\u2500\u2500 libwasmvm.aarch64.so\n\u2502           \u251c\u2500\u2500 libwasmvm.dylib\n\u2502           \u2514\u2500\u2500 libwasmvm.x86_64.so\n\u251c\u2500\u2500 data\n\u2502\xa0\xa0 \u2514\u2500\u2500 priv_validator_state.json\n\u2514\u2500\u2500 wasm\n    \u2514\u2500\u2500 wasm\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Verify your setup with command (ensure version is same as your ",(0,i.jsx)(n.code,{children:"titand"}),")"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"cosmovisor run version --long\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Update service file ",(0,i.jsx)(n.code,{children:"/etc/systemd/system/titand.service"})," to use cosmovisor"]}),"\n",(0,i.jsxs)(n.p,{children:["Replace ",(0,i.jsx)(n.code,{children:"<cosmovisor_absoule_path>"})," by output of command ",(0,i.jsx)(n.code,{children:"which cosmovisor"}),". "]}),"\n",(0,i.jsxs)(n.p,{children:["Replace ",(0,i.jsx)(n.code,{children:"<home_directory>"})," by your home directory that contain folder ",(0,i.jsx)(n.code,{children:".titand"})," . Or other directory if you chose your own folder for titan node."]}),"\n",(0,i.jsx)(n.p,{children:"By default, Cosmovisor will back up the current data before upgrading the chain process (this means your disk space should always have more than 40% free). If your node is configured to keep only a small amount of historical state, the backup process may be fast. However, if your node is a full node that stores a large amount of historical data, you may want to set UNSAFE_SKIP_BACKUP=true to help speed up the upgrade process and avoid consuming disk space."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'[Unit]\nDescription=Titan service\nAfter=network-online.target\n\n[Service]\nUser=root\nExecStart=<cosmovisor_absoule_path> run start --x-crisis-skip-assert-invariants --home <home_directory>/.titand\nRestart=always\nRestartSec=6\nLimitNOFILE=4096\n\nEnvironment="DAEMON_HOME=<home_directory>/.titand"\nEnvironment="DAEMON_NAME=titand"\nEnvironment="DAEMON_ALLOW_DOWNLOAD_BINARIES=true"\nEnvironment="DAEMON_RESTART_AFTER_UPGRADE=true"\nEnvironment="UNSAFE_SKIP_BACKUP=false"\n\n[Install]\nWantedBy=multi-user.target\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Start service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"systemctl daemon-reload\nsystemctl restart systemd-journald\nsystemctl enable titand.service\nsystemctl start titand.service\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Check node status"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"cosmovisor run status\n"})}),"\n",(0,i.jsx)(n.p,{children:"You should get something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'7:12AM INF running app args=["status"] module=cosmovisor path=/home/ubuntu/.titand/cosmovisor/genesis/bin/titand\n{"NodeInfo":{"protocol_version":{"p2p":"8","block":"11","app":"0"},"id":"0e05f4f0c57ed26089e1d10dba6a1ac24e1eaa68","listen_addr":"tcp://0.0.0.0:26656","network":"titan_18889-1","version":"0.37.4","channels":"40202122233038606100","moniker":"Full","other":{"tx_index":"on","rpc_address":"tcp://0.0.0.0:26657"}},"SyncInfo":{"latest_block_hash":"2524BFFE965E2779C63A8F279090C765306194ED58E583C0CC51D2BB51AEFCD5","latest_app_hash":"48886A8524132719FEAC0250A777AE2D52BD6C118378722655514095E7756E5E","latest_block_height":"208339","latest_block_time":"2024-02-06T07:12:20.352972672Z","earliest_block_hash":"1E13F1C9B29A262BED941DEB6545D2081B563D81C55A570608C6AE955492CE3E","earliest_app_hash":"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855","earliest_block_height":"1","earliest_block_time":"2024-01-24T00:00:00Z","catching_up":false},"ValidatorInfo":{"Address":"0BCCB16848B6C9DAA1E889CC1F43C2B9344B6636","PubKey":{"type":"tendermint/PubKeyEd25519","value":"0ujE587gKbF3YdFdsvLhbKsAPmWQSOF+BJVNj8tU+bg="},"VotingPower":"0"}}\n'})}),"\n",(0,i.jsx)(n.p,{children:"If have any issue, you can check error log by"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"journalctl -fu titand\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},5658:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var o=s(758);const i={},t=o.createContext(i);function r(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);